#!/bin/sh
#
# Install dependencies.

# Error (red, underlined)
msg_fail () {
  printf "\033[0;31;4mError\033[0m: $1 \n"
  exit 1
}

# Text (blue)
msg_run () {
  printf "\n\033[0;34m$1\033[0m \n"
}

msg_install () {
  printf "%-50s" "$1"
}

# check if cmd exists
exists () {
  command -v "$1" >/dev/null 2>&1
}


install_dotfiles () {
  msg_run "Installing dotfiles to $HOME ..."    

  # get path of dotfiles repo
  DOTFILES_ROOT="$( cd "$( dirname "$0" )" && cd .. && pwd )"

  # set global default install options
  skip_all=false
  overwrite_all=false
  backup_all=false

  # get list of all dotfiles to be symlinked
  # NOTE: assumes a dotfiles structure of topic/setting.symlink
  #       (e.g. zsh/zshrc.symlink)
  for file in `find $DOTFILES_ROOT -maxdepth 2 -name \*.symlink` ; do

    # get filename of $file (no path)
    symlink_filename=`basename "$file"`

    # create absolute path for link target
    target=`echo "$HOME/.$symlink_filename" | sed "s/\.symlink$//g"`

    # target basename
    target_name=`basename "$target"`
        
    # set default install options (per symlink file)
    skip=false
    overwrite=false
    backup=false

    # get user input if dotfiles already exist
    if [ -f $target ] || [ -d $target ] ; then
    
      if [ "$overwrite_all" = "false" ] && [ "$backup_all" = "false" ] \
        && [ "$skip_all" = "false" ] ; then
            
        # get user input 
        printf "\033[0;31;4mError\033[0m: $target_name already exists:" 
        printf " [s]kip," 
        printf " [S]kip all," 
        printf " [o]verwrite,"
        printf " [O]verwrite all,"
        printf " [b]ackup,"
        printf " [B]ackup all? \n"
        read REPLY
        
        # apply user input 
        case "$REPLY" in
          s) skip=true ;; 
          S) skip_all=true ;;
          o) overwrite=true ;; 
          O) overwrite_all=true ;; 
          b) backup=true ;; 
          B) backup_all=true ;; 
          *) msg_fail "unknown option; quitting now ..." ;;
        esac
      fi # end if-statement for if no global options are set
            
      if $overwrite || $overwrite_all ; then
        printf "Overwriting $target_name ... \n"
        rm -rf $target
      fi

      if $backup || $backup_all ; then
        printf "Backing up $target_name ... \n"
        mv $target $target\.backup
      fi
    
      if $skip || $skip_all ; then
        printf "Skipping $target_name ... \n"
      else
        ln -s $file $target
      fi
    
    # link dotfiles if they don't already exist 
    else
      printf "Installing $target_name ... \n"
      ln -s $file $target
    fi

  done # end loop for all *.symlink files
}


install_dotfiles

msg_run "Finished installing!"

exit 0

# vim: autoindent tabstop=2 shiftwidth=2 expandtab softtabstop=2 filetype=sh
